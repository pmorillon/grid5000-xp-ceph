# INSTALLED BY PUPPET
# Content : template('xp/ceph/ceph.conf.erb')

[global]
    fsid = <%= @fsid %>
    mon initial members = <%= @monitor.split('.').first %>
    mon host = <%= Resolv.getaddress(@nodes.first) %>
    auth cluster required = cephx
    auth service required = cephx
    auth client required = cephx
    osd journal size = 1024
    filestore xattr use omap = true
    osd pool default size = 2
    osd pool default min size = 1
    osd pool default pg num = <%= (@nodes.length * @osd_count * 100 / 2).round %>
    osd pool default pgp num = <%= (@nodes.length * @osd_count * 100 / 2).round %>
    osd pool default crush rule = 1
    osd crush chooseleaf type = 1

[osd]
    osd data = <%= @path %>/osd/osd_$id
    osd journal = <%= @path %>/osd/osd_$id/journal
    osd journal size = 512
    keyring = <%= @path %>/osd/osd_$id/keyring

<% unless @fs == 'xfs' -%>
    filestore xattr use omap = true
<% end -%>

    ; solve rbd data corruption
    filestore fiemap = false


<% @ceph_description.each do |fqdn,desc| -%>
  <%- desc['osd'].each do |osd| -%>
[osd.<%= osd['id'] %>]
    host = <%= fqdn.split('.').first %>
    <%- if @cluster_network_interface -%>
    cluster addr = <%= Resolv.getaddress(fqdn.gsub(/-(\d+)/, '-\1-' + @cluster_network_interface + '-kavlan-' + vlan_id))%>
    <%- end -%>
    public addr = <%= Resolv.getaddress(fqdn) %>
    <%- if osd['device'] != 'sda' -%>
    osd mkfs type = <%= osd['fs'] %>
    devs = /dev/<%= osd['device'] %>1
    <%- end -%>
  <%- end -%>
<% end -%>

[mon]
    mon data = <%= @path %>/mon/mon_$id/data
<% @ceph_description.each do |fqdn,desc| -%>
[mon.<%= fqdn.split('.').first %>]
    host = <%= fqdn.split('.').first %>
    mon addr = <%= Resolv.getaddress(fqdn) %>:6789
<% end -%>

[mds]
    mds data = <%= @path %>/mds/ceph-$id
    keyring = <%= @path %>/mds/ceph-$id/keyring
[mds.<%= @mds.split('.').first %>]
    host = <%= @mds.split('.').first %>

[client.radosgw.<%= @monitor.split('.').first %>]
    host = <%= @monitor.split('.').first %>
    keyring = /etc/ceph/ceph.client.radosgw.keyring
    rgw socket path = /var/run/ceph/ceph.radosgw.<%= @monitor.split('.').first %>.fastcgi.sock
    rgw data = <%= @path %>/radosgw/ceph-radosgw.gateway
    log file = /var/log/ceph/client.radosgw.<%= @monitor.split('.').first %>.log
    rgw ops log rados = true
    rgw enable ops log = true
